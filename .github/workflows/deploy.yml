name: CI/CD for Node.js Docker App on VPS

on:
  push:
    branches:
      - main # Ganti dengan nama branch utama Anda

env:
  # Nama image Docker untuk backend Anda (sesuaikan dengan username Docker Hub Anda)
  DOCKER_IMAGE_NAME: ${{ secrets.DOCKER_HUB_USERNAME }}/backend_express_app 

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      # permissions.packages: write tidak lagi diperlukan jika push ke Docker Hub
      # tetapi tidak ada salahnya tetap ada jika Anda juga menggunakan GHCR untuk hal lain
      # packages: write 

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub # <<< Perubahan di sini
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }} # Menggunakan secret Docker Hub Username
          password: ${{ secrets.DOCKER_HUB_TOKEN }}   # Menggunakan secret Docker Hub Token

      - name: Build and Push Backend Docker Image
        id: build-image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          # Tag image dengan nama Docker Hub Anda
          tags: ${{ env.DOCKER_IMAGE_NAME }}:latest 
          # Atau dengan versi spesifik:
          # tags: ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd /home/user/my-app/

            # Login ke Docker Hub di VPS
            echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

            # Pull image backend terbaru dari Docker Hub
            docker pull ${{ env.DOCKER_IMAGE_NAME }}:latest

            docker-compose down || true 
            docker-compose up -d --build 

            echo "Deployment complete!"